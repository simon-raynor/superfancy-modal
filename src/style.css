@import url(./button.css);
@import url(./properties.css);

@media (prefers-reduced-motion: reduce) {
    * {
        transition-duration: .00001s !important;
        animation-duration: .00001s !important;
    }
}

:root {
    --duration: 1s;

    /* thanks SO https://stackoverflow.com/questions/29786230/how-to-create-css-bounce-effect */
    --easing-bounce: linear(
        0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765,
        1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785,
        0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953,
        0.973, 1, 0.988, 0.984, 0.988, 1
    );

    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;

    line-height: 1.5;
}

body {
    max-width: 45em;
    margin-inline: auto;
    padding-inline: 1em;
}

h2 {
    margin: 0;
}

code {
    font-size: 1em;
}


.modal {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    display: grid;
    align-content: center;
    justify-content: center;

    visibility: hidden;
    pointer-events: none;

    transition-property: none;
    transition-duration: calc(var(--duration) / 2);
    transition-timing-function: ease-in-out;
}

.modal.active {
    visibility: visible;
}

.modal.open {
    pointer-events: all;
    transition-duration: var(--duration);
}

.modal > div {
    opacity: var(--opacity-fg);

    background: #ffffffbb;
    border-bottom: .25em solid #222a;
    padding: 1.5em 1.5em 2em;
    margin: 1em;
    max-width: 35em;
}


.basic {
    --duration: .667s;
    --radius-pct: 0%;
    --opacity-fg: 0;

    transition-property: --radius-pct, --opacity-fg;
    transition-timing-function: ease-out;

    background-color: #443355dd;
    backdrop-filter: blur(.5em);

    mask: radial-gradient(circle farthest-corner
        at var(--evtx-out) var(--evty-out),
        transparent,
        transparent calc(100% - var(--radius-pct)),
        black calc(100% - var(--radius-pct))
    );
}

.basic.open {
    --radius-pct: 100%;
    --opacity-fg: 1;

    mask: radial-gradient(circle farthest-corner
        at var(--evtx-in) var(--evty-in),
        black,
        black var(--radius-pct),
        transparent var(--radius-pct)
    );
}


.orbit {
    --duration: .667s;
    --radius: 0;
    --radius-pct: 0%;
    --theta: 0deg;
    --cx: var(--evtx-in);
    --cy: var(--evty-in);

    transition-property: --radius, --radius-pct, --theta, --opacity-fg;
    transition-timing-function: ease-in, ease-out, ease-out, ease-in;

    --x1: calc(var(--cx) + (cos(270deg - var(--theta)) * (180dvmax - var(--radius))));
    --y1: calc(var(--cy) + (sin(270deg - var(--theta)) * (180dvmax - var(--radius))));
    --x2: calc(var(--cx) + (cos(270deg - var(--theta) + 180deg) * (180dvmax - var(--radius))) * .8);
    --y2: calc(var(--cy) + (sin(270deg - var(--theta) + 180deg) * (180dvmax - var(--radius))) * .8);

    background-image: radial-gradient(circle calc(var(--radius) * 1.5)
        at var(--x1) var(--y1)
        , #ffaa44aa
        , #ff8844aa
        , #ff4466aa calc(var(--radius-pct) * .75)
        , transparent var(--radius-pct)
    ), radial-gradient(circle calc(var(--radius) * 1.5)
        at var(--x2) var(--y2)
        , #ffaa44aa
        , #ff8844aa
        , #ff4466aa calc(var(--radius-pct) * .75)
        , transparent var(--radius-pct)
    );
    mask: radial-gradient(circle calc(var(--radius) * 1.5)
        at var(--x1) var(--y1)
        , black
        , black calc(var(--radius-pct) * .75)
        , transparent var(--radius-pct)
    )
    , radial-gradient(circle calc(var(--radius) * 1.5)
        at var(--x2) var(--y2)
        , black
        , black calc(var(--radius-pct) * .75)
        , transparent var(--radius-pct)
    );

    backdrop-filter: blur(.5em);
}

.orbit.open > div {
    transform: rotate(calc(var(--theta)/9 - 15deg)) skewY(calc(var(--theta)/9 - 15deg));
}

.orbit.open {
    --radius: 90dvmax;
    --radius-pct: 100%;
    --theta: 135deg;
    --opacity-fg: 1;

    --x1: calc(var(--cx) + (cos(var(--theta)) * var(--radius)));
    --y1: calc(var(--cy) + (sin(var(--theta)) * var(--radius)));
    --x2: calc(var(--cx) + (cos(var(--theta) + 180deg) * var(--radius)) * .5);
    --y2: calc(var(--cy) + (sin(var(--theta) + 180deg) * var(--radius)) * .5);
}


.slam {
    --duration: .75s;
    --radius-pct: 0%;
    --scale-fg: 9;

    background: linear-gradient(
        45deg
        , #830d17cc
        , #dd2233cc
        , #830d17cc
    );
    backdrop-filter: blur(.5em);

    mask: linear-gradient(
        45deg
        , black
        , black var(--radius-pct)
        , transparent var(--radius-pct)
        , transparent calc(100% - var(--radius-pct))
        , black calc(100% - var(--radius-pct))
        , black
    );

    transition-property: --radius-pct, --scale-fg, --opacity-fg;
    transition-timing-function: ease-out;
    transition-duration: calc(var(--duration) / 4);
}

.slam > div {
    transform: scaleY(var(--scale-fg));
}

.slam.open {
    transition-timing-function: var(--easing-bounce), var(--easing-bounce), ease-in;

    --opacity-fg: 1;
    --radius-pct: 50%;
    --scale-fg: 1;
}


.drop {
    --duration: 1s;
    --radius: 0dvmax;
    --radius2: 0dvmax;
    --scale-fg: 3;
    --opacity-fg: 0;

    /* use --cx as a second y :) */
    --cx: 0dvh;
    --cy: 0dvh;

    --x1: calc(100dvw - var(--evtx-in));
    --x2: var(--evtx-in);

    --y1: calc(150dvh - (2 * var(--cx)));
    --y2: calc(150dvh - (2 * var(--cy)));

    background-image: radial-gradient(circle var(--radius)
        at var(--x1) var(--y1)
        , #44aaffaa
        , #5588ffaa
        , #6644ffaa 75%
        , transparent 100%
    ), radial-gradient(circle var(--radius2)
        at var(--x2) var(--y2)
        , #aaff44aa
        , #88ff55aa
        , #44ff66aa 75%
        , transparent 100%
    );
    mask: radial-gradient(circle var(--radius)
        at var(--x1) var(--y1)
        , black
        , black 75%
        , transparent 100%
    ), radial-gradient(circle var(--radius2)
        at var(--x2) var(--y2)
        , black
        , black 75%
        , transparent 100%
    );
    backdrop-filter: blur(.5em);

    transition-property: --cx, --radius, --cy, --radius2, --opacity-fg, --scale-fg;
    transition-timing-function: ease-out;
    transition-delay: 0s, 0s, calc(var(--duration) * .1), calc(var(--duration) * .1), 0s, 0s;
}

.drop > div {
    transform: scaleY(calc(1 + (.25 * (var(--scale-fg) - 1))));
    transform-origin: top center;
}

.drop.open {
    --radius: 90dvmax;
    --radius2: 90dvmax;
    --scale-fg: 1;
    --opacity-fg: 1;
    --cx: 50dvh;
    --cy: 50dvh;

    --y1: var(--cx);
    --y2: var(--cy);

    transition-timing-function: var(--easing-bounce), ease-in, var(--easing-bounce), ease-in, ease-in, var(--easing-bounce);
    transition-delay: calc(var(--duration) * .2), calc(var(--duration) * .2), 0s, 0s, 0s, calc(var(--duration) * .4);
}
.drop.open > div {
    transform-origin: bottom center;
}


.clock {
    --duration: .5s;
    --opacity-fg: 1;
    --theta: 0deg;
    --theta2: 0deg;

    --cx: var(--evtx-out);
    --cy: var(--evty-out);

    background: radial-gradient(
        circle farthest-corner
        at var(--cx) var(--cy)
        , #77cc11aa
        , #66bb1177
    );

    mask: conic-gradient(
        at var(--cx) var(--cy)
        , black
        , var(--theta)
        , black
        , var(--theta)
        , transparent
    );
    backdrop-filter: blur(.5em);

    transition-property: --theta, --theta2;
    transition-timing-function: ease-out, ease-out;
    transition-delay: 0s, calc(var(--duration) * .5)
}

.clock > div {
    mask: conic-gradient(
        at center
        , black
        , var(--theta2)
        , black
        , var(--theta2)
        , transparent
    );
}

.clock.open {
    --opacity-fg: 1;
    --theta: 360deg;
    --theta2: 360deg;

    --cx: var(--evtx-in);
    --cy: var(--evty-in);
}